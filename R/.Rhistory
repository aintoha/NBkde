# Two variable Naive Bayes:
data = iris
sample = data[c(1:5, 51:55, 146:150), c(1, 2, 5)]
sample = data.frame(sample)
train = sample[, 1:4]
train = sample[, 1:2]
Class = sample[, 5]
Class = sample[, 3]
# using naive bayes to train the model: Gaussian
model2 = naive_bayes(train, Class,
usekernel = TRUE)
model2
summary(model1)
get_cond_dist(model1)
# create a test data
test = data[110, c(1, 2)]
data[110,]
test = data.frame(test)
test
# predict using the model
model2  %prob% test
predict(model2, test, type = "prob")
summary(model1)
model2
summary(model2)
get_cond_dist(model2)
# compute in detail
summary(model2)
# compute in detail
model2
data[110,]
# using naive bayes to train the model: Gaussian
model2 = naive_bayes(train, Class,
usekernel = FALSE)
model2
summary(model2)
get_cond_dist(model2)
# create a test data
test = data[110, c(1, 2)]
data[110,]
test = data.frame(test)
test
# predict using the model
model2  %prob% test
predict(model2, test, type = "prob")
# compute in detail
model2
test
sum = (dnorm(7.2,4.8600000, 0.2073644) * dnorm(3.6, 3.2800000, 0.2588436)) +
(dnorm(7.2, 6.4600000, 0.5941380) * dnorm(3.6, 2.9200000, 0.3834058 )) +
(dnorm(7.2, 6.3200000,0.3033150) * dnorm(3.6, 2.9800000, 0.3193744))
setosa = (dnorm(7.2,4.8600000, 0.2073644) * dnorm(3.6, 3.2800000, 0.2588436))/ sum
setosa = (dnorm(7.2,4.8600000, 0.2073644) * dnorm(3.6, 3.2800000, 0.2588436))/ sum
setosa
predict(model2, test, type = "prob")
versicolor = (dnorm(7.2, 6.4600000, 0.5941380) * dnorm(3.6, 2.9200000, 0.3834058 )) / sum
versicolor
data = iris
nx = ncol(x)
data = iris
x = iris[,1:4]
y = iris[,5]
nx = ncol(x)
nx
col.x = ncol(x)
length.x  = length(x)
length.x
col.x = ncol(x)
length.x
length.x  = length(x)
length.x  = nrow(x)
length.x
?ks::kde
# Two variable Naive Bayes:
#------------------------------------------------
data = iris
sample = data[c(1:5, 51:55, 146:150), c(1, 2, 5)]
sample = data.frame(sample)
train = sample[, 1:2]
Class = sample[, 3]
# using naive bayes to train the model: Gaussian
model2 = naive_bayes(train, Class,
usekernel = FALSE)
model2
summary(model2)
get_cond_dist(model2)
# create a test data
test = data[110, c(1, 2)]
data[110,]
test = data.frame(test)
test
# predict using the model
model2  %prob% test
predict(model2, test, type = "prob")
# compute in detail
model2
sum = (dnorm(7.2,4.8600000, 0.2073644) * dnorm(3.6, 3.2800000, 0.2588436)) +
(dnorm(7.2, 6.4600000, 0.5941380) * dnorm(3.6, 2.9200000, 0.3834058 )) +
(dnorm(7.2, 6.3200000,0.3033150) * dnorm(3.6, 2.9800000, 0.3193744))
setosa = (dnorm(7.2,4.8600000, 0.2073644) * dnorm(3.6, 3.2800000, 0.2588436))/ sum
versicolor = (dnorm(7.2, 6.4600000, 0.5941380) * dnorm(3.6, 2.9200000, 0.3834058 )) / sum
predict(model2, test, type = "prob")
print(c(setosa, versicolor, virginica))
c(setosa, versicolor, virginica)
output = c(setosa, versicolor, virginica)
virginica = (dnorm(7.2, 6.3200000,0.3033150) * dnorm(3.6, 2.9800000, 0.3193744)) / sum
output = c(setosa, versicolor, virginica)
output
predict(model2, test, type = "prob")
data[110,]
data = iris
ncol = data
unique(data[,5])
install.packages("dplyr")
library(dplyr)
class.n = length(unique(last_col(data)))
data = iris
class.n = length(unique(last_col(data)))
data = iris
col.n = ncol(data)
class.n = length(unique(data[,col.n]))
class.n
covariates.n = col.n - 1
covariates.n
df <- data.frame(matrix(ncol = col.n, nrow = NA))
matrix(ncol = col.n, nrow = NA)
col.n = ncol(data)
class.n = length(unique(data[,col.n]))
df <- data.frame(matrix(ncol = col.n, nrow = NA))
df <- matrix(ncol = col.n, nrow = NA)
df <- matrix(ncol = col.n, nrow = 0)
df
class.n = length(unique(data[,col.n]))
class.name = unique(data[col.n])
class.name = unique(data[,col.n])
class.name
?names
??names
data = iris
col.n = ncol(data)
class.name = unique(data[,col.n])
class.n = length(unique(data[,col.n]))
df <- matrix(ncol = col.n, nrow = 0)
covariates.n = col.n - 1
data[data[,1] == data[,col.n]]
class.name = unique(data[,col.n])
class.n = length(unique(data[,col.n]))
class.n
data[, col.n] ==
)
class.name
class.name = unique(data[,col.n])
class.name
class.name[1]
class(class.name)
data[1, ] == data[,class.name[1]]
data[ ,1] == data[,class.name[1]]
class.name
class.name[a]
class.name[1]
data[ ,1] == data[,class.name[1]]
data
data[ ,1] == data[,class.name[1]]
data[,1]
data[,1]
data[ ,col.n] == data[,class.name[1]]
data[col.n]
data[ ,col.n] == class.name[1]
data[,data[ ,col.n] == class.name[1]]
data[ ,col.n] == class.name[1]
data[data[ ,col.n] == class.name[1]]
data[ ,col.n] == data[,class.name[1]]
data[,class.name[1]]
data[ ,col.n] == data[,class.name[1]]
data[ ,col.n] == class.name[1]
data[ ,col.n] == data[, class.name[1]]
data[data[ ,col.n] == data[, class.name[1]]]
data[data[ ,col.n ==  class.name[1]]
]
data[ ,col.n ==  class.name[1]]
data[, col.n == class.name[1]]
class.name
class.name[1]
class.name = as.character(unique(data[,col.n]))
class.name
class.name[1]
data[ ,col.n ==  class.name[1]]
class.name = as.numeric(unique(data[,col.n]))
class.n = length(unique(data[,col.n]))
data[ ,col.n ==  class.name[1]]
class(data[, col.n])
x <- c(80, 50, 62, 86, 70, 65, 70, 70, 85, 77)
var(x)
sd(x)
mean(x)
sort(x)
length(x)
11/5
11/2
qnorm(0.1)
qnorm(0.9)
setwd("C:/Users/nt2036/OneDrive - Heriot-Watt University/F78DA-F78DB/F78DA-DB_2023-24/FYP Project 2023/R Code/thyroid+disease")
data = read.table(ann-train.data)
data = read.table("ann-train.data")
head(data)
tail(data)
length(data)
nrow(data)
data = read.table("new-thyroid.data")
head(data)
data = read.table("new-thyroid.data", sep = ",")
head(data)
tail(data)
data = read.table("thyroid0837.data", sep = ",")
data = read.table("thyroid0387.data", sep = ",")
head(data)
data = read.table("allhypo.data", sep = ",")
head(data)
tail(data)
data = read.table("allhyper.data", sep = ",")
head(data)
tail(data)
data = read.table("allrep.data", sep = ",")
tail(data)
tail(data)
data[V24]
data$V24
data = read.table("new-thyroid.data", sep = ",")
data = read.table("allrep.data", sep = ",")
data = read.table("new-thyroid.data", sep = ",")
head(data)
tail(data)
install.packages("tcpl")
library(tcpl)
head(data)
tail(dtaa)
tail(data)
data = read.table("allhypo.data", sep = ",")
head(data)
tail(data)
data = read.table("allhyper.data", sep = ",")
tail(data)
data = read.table("allrep.data", sep = ",")
tail(data)
data = read.table("ann-train.data", sep = ",")
tail(data)
data = read.table("hypothyroid.data", sep = ",")
tail(data)
data = read.table("new-thyroid.data", sep = ",")
tail(data)
data = read.table("thyroid0387.data", sep = ",")
tail(data)
data = read.table("sick-euthyroid.data", sep = ",")
tail(data)
head(data)
data = read.table("sick.data", sep = ",")
tail(data)
data = read.table("allbp.data", sep = ",")
tail(data)
setwd("C:/Users/nt2036/OneDrive - Heriot-Watt University/F78DA-F78DB/F78DA-DB_2023-24/FYP Project 2023/NBkde/R")

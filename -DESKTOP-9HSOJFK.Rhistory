library(NBkde)
traindata = iris[c(1:5, 51:55),]
testdata = as.matrix(iris[c(49, 50, 99, 100), -5])
# h <- c(0.1589, 0.1580,0.04238, 0.04479, 0.413,0.1907, 0.2331, 0.08476)
# h = c(0.1589, 0.413, 0.3708, 0.1589, 0.1907, 0.1059, 0.04238,
# 0.2331, 0.1801, 0.04479, 0.08476, 0.1589)
h <- c(0.1353,0.2434, 0.1688,0.1947,0.04612,0.09736,0.1305,0.04868)
# h <- rep(1.5, 8)
pdf = predict_nbkde(traindata=traindata, testdata=testdata, h = h)
pdf
library(naivebayes)
train <- traindata
test <- testdata
X <- as.matrix(train[-5])
class <- matrix(train$Species, byrow = T)
nb_kde <- naive_bayes(X, class, usekernel = TRUE, kernel = "gaussian")
summary(nb_kde)
plot(nb_kde)
get_cond_dist(nb_kde)
p <- predict(nb_kde, test, type = 'prob')
p
pdf
traindata = iris[c(1:45, 51:95),]
testdata = as.matrix(iris[c(49, 50, 99, 100), -5])
# h <- c(0.1589, 0.1580,0.04238, 0.04479, 0.413,0.1907, 0.2331, 0.08476)
# h = c(0.1589, 0.413, 0.3708, 0.1589, 0.1907, 0.1059, 0.04238,
# 0.2331, 0.1801, 0.04479, 0.08476, 0.1589)
h <- c(0.1353,0.2434, 0.1688,0.1947,0.04612,0.09736,0.1305,0.04868)
# h <- rep(1.5, 8)
pdf = predict_nbkde(traindata=traindata, testdata=testdata, h = h)
# h <- c(0.1589, 0.1580,0.04238, 0.04479, 0.413,0.1907, 0.2331, 0.08476)
# h = c(0.1589, 0.413, 0.3708, 0.1589, 0.1907, 0.1059, 0.04238,
# 0.2331, 0.1801, 0.04479, 0.08476, 0.1589)
# h <- c(0.1353,0.2434, 0.1688,0.1947,0.04612,0.09736,0.1305,0.04868)
h <- NULL
pdf = predict_nbkde(traindata=traindata, testdata=testdata, h = h)
pdf
############################
library(naivebayes)
train <- traindata
test <- testdata
X <- as.matrix(train[-5])
class <- matrix(train$Species, byrow = T)
nb_kde <- naive_bayes(X, class, usekernel = TRUE, kernel = "gaussian")
summary(nb_kde)
plot(nb_kde)
get_cond_dist(nb_kde)
p <- predict(nb_kde, test, type = 'prob')
p
pdf
ifelse(as.matrix(iris[c(49, 50, 99, 100), 5]), log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa))
ifelse(as.matrix(iris[c(49, 50, 99, 100), 5])="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa))
ifelse(iris[c(49, 50, 99, 100), 5]="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa))
log(pdf[[1]])
log(pdf[[1]]$versicolor)
log(pdf[[1]]$setosa)
ifelse(iris[c(49, 50, 99, 100), 5]="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa))
iris[c(49, 50, 99, 100), 5]="setosa"
if(iris[c(49, 50, 99, 100), 5]="setosa")
ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa))
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa)))
ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(p$setosa), log(1-p$setosa))
p
p[,1]
ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(p[,1]), log(1-p[,1]))
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(p[,1]), log(1-p[,1])))
traindata = iris[c(1:45, 51:95),]
testdata = as.matrix(iris[c(49, 50, 99, 100), -5])
# h <- c(0.1589, 0.1580,0.04238, 0.04479, 0.413,0.1907, 0.2331, 0.08476)
# h = c(0.1589, 0.413, 0.3708, 0.1589, 0.1907, 0.1059, 0.04238,
# 0.2331, 0.1801, 0.04479, 0.08476, 0.1589)
# h <- c(0.1353,0.2434, 0.1688,0.1947,0.04612,0.09736,0.1305,0.04868)
h <- NULL
pdf = predict_nbkde(traindata=traindata, testdata=testdata, h = h)
pdf
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa)))
train <- traindata
test <- testdata
X <- as.matrix(train[-5])
class <- matrix(train$Species, byrow = T)
nb_kde <- naive_bayes(X, class, usekernel = TRUE, kernel = "gaussian")
summary(nb_kde)
plot(nb_kde)
get_cond_dist(nb_kde)
p <- predict(nb_kde, test, type = 'prob')
p
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(p[,1]), log(1-p[,1])))
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa)))
nb_kde <- naive_bayes(X, class, usekernel = TRUE, kernel = "gaussian", bw = 1)
summary(nb_kde)
plot(nb_kde)
get_cond_dist(nb_kde)
p <- predict(nb_kde, test, type = 'prob')
p
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(p[,1]), log(1-p[,1])))
pdf
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa)))
log(1)
pdf[[1]]$setosa
ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa)))
ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa))
pdf[[1]]
log(2.803033e-10)
log(1)
pdf = predict_nbkde(traindata=traindata, testdata=testdata, h = h)
pdf
-mean(ifelse(iris[c(49, 50, 99, 100), 5]=="setosa", log(pdf[[1]]$setosa), log(1-pdf[[1]]$setosa)))
iris[c(49, 50, 99, 100), 5]
log(pdf[[1]]$setosa)
pdf[[1]]$setosa
log(1)
log(1.00000000)
log(1.00000000e+00)
pdf[[1]]
pdf[[1]]
log(9.222501e-07)
pdf[[1]]
log(9.222501e-07, 10)
log(4.872339e-09)
a <- pdf[[1]]$setosa
log(a)
log(exp(1))
log(1)
log(0.99999)
log(1,10)
log(1)
log(10)
traindata = iris[c(1:45, 51:95),]
testdata = as.matrix(iris[c(49, 50, 99, 100), -5])
# h <- c(0.1589, 0.1580,0.04238, 0.04479, 0.413,0.1907, 0.2331, 0.08476)
# h = c(0.1589, 0.413, 0.3708, 0.1589, 0.1907, 0.1059, 0.04238,
# 0.2331, 0.1801, 0.04479, 0.08476, 0.1589)
# h <- c(0.1353,0.2434, 0.1688,0.1947,0.04612,0.09736,0.1305,0.04868)
h <- NULL
pdf = predict_nbkde(traindata=traindata, testdata=testdata, h = h)
pdf
############################
library(naivebayes)
train <- traindata
test <- testdata
X <- as.matrix(train[-5])
class <- matrix(train$Species, byrow = T)
nb_kde <- naive_bayes(X, class, usekernel = TRUE, kernel = "gaussian", bw = 1)
summary(nb_kde)
plot(nb_kde)
get_cond_dist(nb_kde)
p <- predict(nb_kde, test, type = 'prob')
p
nb_kde %prob% test
pdf
log(0)
log_logloss <- function(true_class, predicted_prob){
loss <- ifelse(true_class == 1, log(predicted_prob), log(1 - predicted_prob))
return(loss)
}
log_logloss(iris[c(49, 50, 99, 100), 5], log(pdf[[1]]$setosa,
log(1-pdf[[1]]$setosa)))
class <- ifelse(iris[c(49,50,99,100), 5] == "setosa", 1, 0)
class
iris
testdata = as.matrix(iris[c(49, 50, 97, 98), -5])
# h <- c(0.1589, 0.1580,0.04238, 0.04479, 0.413,0.1907, 0.2331, 0.08476)
# h = c(0.1589, 0.413, 0.3708, 0.1589, 0.1907, 0.1059, 0.04238,
# 0.2331, 0.1801, 0.04479, 0.08476, 0.1589)
# h <- c(0.1353,0.2434, 0.1688,0.1947,0.04612,0.09736,0.1305,0.04868)
h <- NULL
# h <- c(0.1589, 0.1580,0.04238, 0.04479, 0.413,0.1907, 0.2331, 0.08476)
# h = c(0.1589, 0.413, 0.3708, 0.1589, 0.1907, 0.1059, 0.04238,
# 0.2331, 0.1801, 0.04479, 0.08476, 0.1589)
# h <- c(0.1353,0.2434, 0.1688,0.1947,0.04612,0.09736,0.1305,0.04868)
h <- NULL
pdf = predict_nbkde(traindata=traindata, testdata=testdata, h = h)
pdf
log_logloss <- function(true_class, predicted_prob){
loss <- ifelse(true_class == 1, log(predicted_prob), log(1 - predicted_prob))
return(loss)
}
class <- ifelse(iris[c(49,50,97,98), 5] == "setosa", 1, 0)
log_logloss(iris[c(49, 50, 99, 100), 5], log(pdf[[1]]$setosa,
log(1-pdf[[1]]$setosa)))
log_logloss(iris[c(49, 50, 97,98), 5], log(pdf[[1]]$setosa,
log(1-pdf[[1]]$setosa)))
class
log_logloss(class, log(pdf[[1]]$setosa,
log(1-pdf[[1]]$setosa)))
pdf
log(pdf[[1]]$setosa
log_logloss <- function(true_class, predicted_prob){
class <- ifelse(iris[c(49,50,97,98), 5] == "setosa", 1, 0)
log_logloss <- function(true_class, predicted_prob){
loss <- ifelse(true_class == 1, log(predicted_prob), log(1 - predicted_prob))
return(-mean(loss))
}
class <- ifelse(iris[c(49,50,97,98), 5] == "setosa", 1, 0)
log_logloss(class, log(pdf[[1]]$setosa, log(1-pdf[[1]]$setosa)))
class
ifelse(class == 1, log(pdf[[1]]$setosa), log(1 - pdf[[1]]$setosa))
pdf[[1]]
?ifelse
ifelse(class == 1, log10(pdf[[1]]$setosa), log10(1 - pdf[[1]]$setosa))
log(1.000000e+00)
log_logloss <- function(true_class, predicted_prob){
loss <- ifelse(true_class == 1, log(predicted_prob), log(1 - predicted_prob))
return(-mean(loss))
}
class <- ifelse(iris[c(49,50,97,98), 5] == "setosa", 1, 0)
log_logloss(class, log(pdf[[1]]$setosa, log(1-pdf[[1]]$setosa)))
logloss <- function(true_class, predicted_prob){
loss <- ifelse(true_class == 1, log(predicted_prob), log(1 - predicted_prob))
return(-mean(loss))
}
class <- ifelse(iris[c(49,50,97,98), 5] == "setosa", 1, 0)
logloss(class, log(pdf[[1]]$setosa, log(1-pdf[[1]]$setosa)))
log(1)
log(-1)
pdf
logloss(class, pdf[[1]]$setosa)
logloss <- function(true_class, predicted_prob){
loss <- ifelse(true_class == 1, log(predicted_prob), log(1 - predicted_prob))
return(-mean(loss))
}
class <- ifelse(iris[c(49,50,97,98), 5] == "setosa", 1, 0)
logloss(class, pdf[[1]]$setosa)
loss <- ifelse(true_class == 1, log(pdf[[1]]$setosa), log(1 - pdf[[1]]$setosa))
loss <- ifelse(class == 1, log(pdf[[1]]$setosa), log(1 - pdf[[1]]$setosa))
loss
( -5.345724e-13  -5.622629e-10 -6.242118e-09 -3.619549e-12)/4
############################
library(naivebayes)
train <- traindata
test <- testdata
X <- as.matrix(train[-5])
class <- matrix(train$Species, byrow = T)
nb_kde <- naive_bayes(X, class, usekernel = TRUE, kernel = "gaussian", bw = 1)
summary(nb_kde)
plot(nb_kde)
get_cond_dist(nb_kde)
p <- predict(nb_kde, test, type = 'prob')
p
logloss(class, p[,1])
nb_kde <- naive_bayes(X, class, usekernel = TRUE, kernel = "gaussian")
summary(nb_kde)
plot(nb_kde)
get_cond_dist(nb_kde)
p <- predict(nb_kde, test, type = 'prob')
p
logloss(class, p[,1])
p
pdf
p[,1]

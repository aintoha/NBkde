gaussian_ibl = function(xtest, xtrain, h){
m = length(xtest) # length of test
n = length(xtrain) # length of train
dif = sapply(xtrain, function(x) (x - xtest))
erf_dif = matrix(dif * pracma::erf(dif / (sqrt(2) * h)), nrow = m, ncol = n)
exp_dif = h * sqrt(2 / pi) * matrix(exp(-(dif^2) / (2 * h^2)), nrow = m, ncol = n)
dif_train = sapply(xtrain, function(x) (x - xtrain))
erf_dif_train = 1/2 * matrix(dif_train * pracma::erf(dif_train / (2 *h)), nrow = n, ncol = n)
exp_dif_train = (h / sqrt(pi)) * matrix(exp(-(dif_train^2) / (4 * h^2)), nrow = n, ncol = n)
score = apply(erf_dif, 1, mean) +  apply(exp_dif, 1, mean) -
((1 / (n^2)) * sum(erf_dif_train)) - ((1/ (n^2)) * sum(exp_dif_train))
# score = ((1 / (m * n)) * sum(erf_dif)) + (h * sqrt(2 / pi) * (1 / (m * n)) * sum(exp_dif)) -
# ((1 / (2* n^2)) * sum(erf_dif_train)) - ((h/ (n^2 * sqrt(pi))) * sum(exp_dif_train))
avg_score = mean(score)
return(avg_score)
}
set.seed(2024)
h = seq(0.1, 10, by = 0.2)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(5, 10, 1)
xtest = c(xtrain, 0.1)
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
set.seed(2024)
h = seq(0.1, 10, by = 0.2)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, 0.1)
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
set.seed(2024)
h = seq(0.001, 1, by = 0.002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, 0.1)
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
score
xtest
xtest = c(xtrain, 11)
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
h = seq(0.00001, 0.01, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, 11)
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
xtest
0.139/(2 * 10^2)
sqrt(2) * 10
sqrt(2) * 10 - 4
5 * (sqrt(2) - 1)
10 * (sqrt(2) - 1)
set.seed(2024)
h = seq(0.00001, 0.01, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, rnorm(5, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
set.seed(2024)
h = seq(0.00001, 1, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, rnorm(5, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
set.seed(2024)
h = seq(0.001, 1, by = 0.002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, rnorm(4, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
set.seed(2024)
h = seq(0.001, 5, by = 0.002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, rnorm(4, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
set.seed(2024)
h = seq(0.001, 5, by = 0.002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, rnorm(4, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
score
min_binwidth
which.min(score)
m = length(xtest) # length of test
n = length(xtrain) # length of train
dif = sapply(xtrain, function(x) (x - xtest))
erf_dif = matrix(dif * pracma::erf(dif / (sqrt(2) * h)), nrow = m, ncol = n)
exp_dif = h * sqrt(2 / pi) * matrix(exp(-(dif^2) / (2 * h^2)), nrow = m, ncol = n)
dif_train = sapply(xtrain, function(x) (x - xtrain))
erf_dif_train = 1/2 * matrix(dif_train * pracma::erf(dif_train / (2 *h)), nrow = n, ncol = n)
exp_dif_train = (h / sqrt(pi)) * matrix(exp(-(dif_train^2) / (4 * h^2)), nrow = n, ncol = n)
score = apply(erf_dif, 1, mean) +  apply(exp_dif, 1, mean) -
((1 / (n^2)) * sum(erf_dif_train)) - ((1/ (n^2)) * sum(exp_dif_train))
apply(exp_dif, 1, mean)
h=0.0001
m = length(xtest) # length of test
n = length(xtrain) # length of train
dif = sapply(xtrain, function(x) (x - xtest))
erf_dif = matrix(dif * pracma::erf(dif / (sqrt(2) * h)), nrow = m, ncol = n)
exp_dif = h * sqrt(2 / pi) * matrix(exp(-(dif^2) / (2 * h^2)), nrow = m, ncol = n)
dif_train = sapply(xtrain, function(x) (x - xtrain))
erf_dif_train = 1/2 * matrix(dif_train * pracma::erf(dif_train / (2 *h)), nrow = n, ncol = n)
exp_dif_train = (h / sqrt(pi)) * matrix(exp(-(dif_train^2) / (4 * h^2)), nrow = n, ncol = n)
apply(exp_dif, 1, mean)
((1/ (n^2)) * sum(exp_dif_train))
mean(apply(exp_dif, 1, mean))
h = min_binwidth
h
m = length(xtest) # length of test
n = length(xtrain) # length of train
dif = sapply(xtrain, function(x) (x - xtest))
erf_dif = matrix(dif * pracma::erf(dif / (sqrt(2) * h)), nrow = m, ncol = n)
exp_dif = h * sqrt(2 / pi) * matrix(exp(-(dif^2) / (2 * h^2)), nrow = m, ncol = n)
dif_train = sapply(xtrain, function(x) (x - xtrain))
erf_dif_train = 1/2 * matrix(dif_train * pracma::erf(dif_train / (2 *h)), nrow = n, ncol = n)
exp_dif_train = (h / sqrt(pi)) * matrix(exp(-(dif_train^2) / (4 * h^2)), nrow = n, ncol = n)
score = apply(erf_dif, 1, mean) +  apply(exp_dif, 1, mean) -
((1 / (n^2)) * sum(erf_dif_train)) - ((1/ (n^2)) * sum(exp_dif_train))
((1/ (n^2)) * sum(exp_dif_train))
mean(apply(exp_dif, 1, mean))
0.01040334-0.01040914
set.seed(2024)
h = seq(0.001, 5, by = 0.002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain, rnorm(4, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
set.seed(2024)
h = seq(0.001, 5, by = 0.002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain[1:5], rnorm(2, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
xtest
set.seed(2024)
h = seq(0.00001, 0.05, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain[1:5], rnorm(2, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
h = seq(0.00001, 5, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain[1:5], rnorm(2, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
set.seed(2024)
h = seq(0.00001, 5, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain[1:10], rnorm(1, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
xtest
8.775125 - 8.328075
0.44705/(2 * 100)
set.seed(2024)
h = seq(0.00001, 0.2, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain[1:10], rnorm(1, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
score[1]
exp(-1/0.0001)
pracma::erf(0.1/0.0001)
set.seed(2024)
h = seq(0.00001, 0.2, by = 0.00002)
# xtrain = qnorm(ppoints(10)) #data
xtrain = rnorm(10, 10, 1)
xtest = c(xtrain[1:10], rnorm(1, 10, 1))
# xtest = c(sample(xtrain, 1)) #, rnorm(4, 1, 1))
score = rep(NA, length(h))
for(i in 1:length(h)){
score[i] = gaussian_ibl(xtest= xtest, xtrain = xtrain, h= h[i])
}
min_binwidth = h[which.min(score)]
print(min_binwidth)
plot(h, score, type = 'l')
